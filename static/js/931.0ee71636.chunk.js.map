{"version":3,"file":"static/js/931.0ee71636.chunk.js","mappings":"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","sources":["components/MealItem/MealItem.js","components/SearchContent/SearchContent.js","components/Accordion/Accordion.js","db/dataApi.js","pages/Home/Home.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './MealItem.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n// Imported Icons ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart , faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst MealItem = ({ data , isFavorite , toggleFavorite } ) => {\r\n    const navigate = useNavigate();\r\n    // console.log(data);\r\n    // console.log(\"toggleFavorite for \", data.idMeal,\": \" , toggleFavorite);\r\n\r\n    // a random number \r\n    const randomInt = Math.floor(Math.random() * 1000) + 1;\r\n    const randomInt1 = Math.floor(Math.random() * 5) + 1;\r\n    var randomFloat = Math.random();\r\n    var roundedFloat = (Math.round(randomFloat * 10) / 10) + randomInt1;\r\n\r\n\r\n    const navigation = useNavigate();\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n    const [favoriteStatus, setFavoriteStatus] = useState(isFavorite); \r\n\r\n    const handleLove = () => {\r\n        // Color red\r\n        setFavoriteStatus(!favoriteStatus);\r\n        if(storedUser){\r\n            toggleFavorite(data.idMeal);\r\n        }\r\n        else{\r\n            navigate('/signin')\r\n        }\r\n    }\r\n\r\n\r\n    const handleClickFood = () => {\r\n        localStorage.setItem('dataMealRecipe', JSON.stringify(data));\r\n        navigation(\"/recipe\", {\r\n            replace: true,\r\n            state: { data }\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className='col-6 col-md-4 col-lg-3'>\r\n                <div className=\"contentFood\" key={data.idMeal}>\r\n                    <div className='bgFood' onClick={handleClickFood}>\r\n                    </div>\r\n\r\n                    <div className=\"img-food mb-3\">\r\n                        <img src={data.strMealThumb} alt=\"\"/>\r\n                        <div className='iconHeart'>\r\n                            <FontAwesomeIcon \r\n                                icon={faHeart} \r\n                                className={favoriteStatus ? 'active' : ''}\r\n                                onClick={handleLove}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"details mt-4\">\r\n                        <h6>{data.strMeal}</h6>\r\n                        <div className=\"d-flex justify-content-between mt-2\">\r\n                            <p>\r\n                                <FontAwesomeIcon\r\n                                    icon={faStar}\r\n                                    className=\"text-warning pe-2\"\r\n                                />\r\n                                <span>{roundedFloat}({randomInt})</span>\r\n                            </p>\r\n                            <p className=''>{ data.strArea}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport './SearchContent.css'\r\nimport MealItem from '../MealItem/MealItem';\r\n\r\n// Imported Icons ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Imported Paginate ======>\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nconst SearchContent = () => {\r\n    \r\n    const [valueSearch, setValueSearch] = useState('');\r\n    const [meal, setMeal] = useState([]);\r\n    const [valueSelect, setValueSelect] = useState('Sort by: All');\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n\r\n\r\n\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const toggleFavorite = (mealId) => {\r\n        let updatedFavorites;\r\n        if (favorites.includes(mealId)) {\r\n            updatedFavorites = favorites.filter((id) => id !== mealId);\r\n        } else {\r\n            updatedFavorites =[...favorites, mealId];\r\n        }\r\n        setFavorites(updatedFavorites);\r\n        localStorage.setItem('FavoriteMeal', JSON.stringify(updatedFavorites));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedFavorites = JSON.parse(localStorage.getItem('FavoriteMeal'));\r\n        if (storedFavorites) {\r\n            setFavorites(storedFavorites);\r\n        }\r\n    }, []);\r\n    \r\n    \r\n    \r\n    const SearchMeal = (e) => {\r\n        if(e.key === \"Enter\")\r\n        {\r\n            setLoading(true);\r\n            fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${valueSearch}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMeal(data.meals);\r\n                setLoading(false);\r\n                localStorage.setItem('dataMealSearch', JSON.stringify(data.meals));\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            })\r\n        }\r\n    }\r\n\r\n    // Do Paginate =====================================================>\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const itemsPerPage = 8;\r\n\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    const currentItems = meal?.slice(itemOffset, endOffset) || [];\r\n    const pageCount = meal?.length ? Math.ceil(meal.length / itemsPerPage) : 0;\r\n    // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n\r\n    // console.log('meal: ',meal)\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = (event.selected * itemsPerPage) % meal.length;\r\n        // console.log(\r\n        // `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        // );\r\n        setItemOffset(newOffset);\r\n    };\r\n    // =================================================================\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid container-lg d-grid\">\r\n                <div className=\"row justify-content-between g-4\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                    <div className=\"divSearch\">\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                        <input\r\n                        type=\"search\"\r\n                        placeholder=\"Search for recipes...\"\r\n                        onChange={(e) => setValueSearch(e.target.value)}\r\n                        onKeyPress={SearchMeal}\r\n                        value={valueSearch}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 text-end\">\r\n                    <select onChange={(e) => setValueSelect(e.target.value)}>\r\n                        <option>Sort by: All</option>\r\n                        <option>Beef</option>\r\n                        <option>Breakfast</option>\r\n                        <option>Chicken</option>\r\n                        <option>Lamb</option>\r\n                        <option>Pork</option>\r\n                        <option>Pasta</option>\r\n                        <option>Dessert</option>\r\n                        <option>Side</option>\r\n                        <option>Starter</option>\r\n                        <option>Seafood</option>\r\n                        <option>Vegetarian</option>\r\n                        <option>Miscellaneous</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divFood my-5\">\r\n                    <div className=\"row g-5\">\r\n                        {valueSearch.length === 0  || meal == null? (\r\n                            <p className=\"notFound\">Not found</p>\r\n                            ) : ( \r\n                                loading ? (\r\n                                    <div className='col-6 col-md-4 col-lg-3'>\r\n                                        <div className=\"contentFood\">\r\n                                            <div className='bgFood'></div>\r\n                                            <div className=\"img-food mb-3\">\r\n                                                <img src='' alt=\"\" className='placeholder placeholder-img w-100'/>\r\n                                            </div>\r\n                                            <div className=\"details\">\r\n                                                <h6 className='placeholder h-100 w-100'></h6>\r\n                                                <div className=\"placeholder h-100 w-100\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                currentItems.map((res) => {\r\n                                    if (\r\n                                        valueSelect === res.strCategory ||\r\n                                        valueSelect === \"Sort by: All\"\r\n                                        ) {\r\n                                            return (\r\n                                                <MealItem \r\n                                                    data={res} \r\n                                                    isFavorite={favorites.includes(res.idMeal)}\r\n                                                    toggleFavorite={toggleFavorite} \r\n                                                    key={res.idMeal}\r\n                                                />\r\n                                            )\r\n                                    }\r\n                                console.log(meal);\r\n                            })\r\n                        )\r\n                    )}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='pagination'>\r\n                    <ReactPaginate\r\n                        breakLabel=\"...\"\r\n                        nextLabel=\" >\"\r\n                        onPageChange={handlePageClick}\r\n                        pageRangeDisplayed={2}\r\n                        pageCount={pageCount}\r\n                        previousLabel=\"< \"\r\n                        renderOnZeroPageCount={null}\r\n                        pageLinkClassName='pageNum'\r\n                        previousLinkClassName='pageNum'\r\n                        nextLinkClassName='pageNum'\r\n                        activeLinkClassName='activePageNum'\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchContent","import React, { useState } from 'react'\r\nimport './Accordion.css'\r\n\r\n// Imported Font Awesome ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus , faMinus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Accordion = ({ id , title , links}) => {\r\n\r\n    const [showLinks, setShowLinks] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"singleLinks\">\r\n                <div className=\"btnLinks\" onClick={() => setShowLinks(!showLinks)}>\r\n                    <h6>{title}</h6>\r\n                    <p>\r\n                    {showLinks ? (\r\n                        <FontAwesomeIcon icon={faMinus} />\r\n                    ) : (\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    )}\r\n                    </p>\r\n                </div>\r\n\r\n                <ul>\r\n                    {showLinks &&\r\n                    links.map((link, index) => {\r\n                        return (\r\n                        <li key={index}>\r\n                            <a href=\"#\">{link}</a>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Accordion\r\n","export const questions = [\r\n    {\r\n        id: 1,\r\n        title: 'Dish Type',\r\n        links: [\r\n            'Appetizers & Snacks',\r\n            'Bread Recipes',\r\n            'Cake Recipes',\r\n            'Candy and Fudge',\r\n            'Casserole Recipes',\r\n            'Christmas Cookies',\r\n            'Cocktail Recipes',\r\n            'Main Dishes',\r\n            'Pasta Recipes',\r\n            'Pie Recipes',\r\n            'Sandwiches'\r\n        ]\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Meal Type',\r\n        links: [\r\n            'Breakfast and Brunch',\r\n            'Desserts',\r\n            'Dinners',\r\n            'Lunch'\r\n        ]\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Diet and Health',\r\n        links: [\r\n            'Diabetic',\r\n            'Gluten Free',\r\n            'High Fiber Recipes',\r\n            'Low Calorie'\r\n        ]\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'World Cuisine',\r\n        links: [\r\n            'Chinese',\r\n            'Indian',\r\n            'Italian',\r\n            'Mexican'\r\n        ]\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Seasonal',\r\n        links: [\r\n            'Baby Shower',\r\n            'Birthday',\r\n            'Christmas',\r\n            'Halloween'\r\n        ]\r\n    }\r\n]","import React, { useEffect, useState } from 'react'\r\nimport './Home.css'\r\nimport Navbar from '../../layout/Navbar/Navbar'\r\nimport Footer from '../../layout/Footer/Footer'\r\nimport SearchContent from '../../components/SearchContent/SearchContent'\r\nimport Accordion from '../../components/Accordion/Accordion'\r\n\r\n// Imported Font Awesome ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowRight , faPlay } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { questions } from '../../db/dataApi'\r\nimport Favorite from '../FavoriteMeal/Favorite'\r\n\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n  const [dataLinks] = useState(questions);\r\n  const [mealVideos, setMealVideos] = useState([]);\r\n  const [playVideo, setPlayVideo] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    // Meal Videos\r\n    fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=a`)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      // console.log(data.meals);\r\n      setMealVideos(data.meals);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.log('Error fetching data:', error);\r\n    })\r\n\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className=\"contentHome mt-5\">\r\n        <div className=\"header\">\r\n          <div className=\"sec-1 my-4\">\r\n            <div className=\"container-fluid container-lg\">\r\n              <div className=\"img-card col-11 rounded-4\">\r\n                <div className=\"img-card-content\">\r\n                  <h1 className=\"card-title\">Choose from thousands of recipes</h1>\r\n                  <p>\r\n                    Appropriately integrate technically sound value with\r\n                    scalable infomediaries negotiate sustainable strategic theme\r\n                    areas.\r\n                  </p>\r\n                  <a className=\"icon-link icon-link-hover\" href=\"#\">\r\n                    Sign up today\r\n                    <FontAwesomeIcon icon={faArrowRight} className=\"ms-2\" />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sec-2\">\r\n          <div className=\"container-fluid container-lg\">\r\n            <div className=\"row g-5\">\r\n\r\n              {/* ---------------  Aside  --------------- */}\r\n\r\n              <div className=\"col-12 col-md-3\">\r\n                <div className='aside pe-3'>\r\n                  <h1 className=\"header fs-3 mb-5\">Recipes</h1>\r\n                  <div className='groupLinks d-grid'>\r\n                    \r\n                    {\r\n                      dataLinks.map((dataQ) => {\r\n                        return(\r\n                          <Accordion key={dataQ.id} {...dataQ}/>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* ---------------  Search  --------------- */}\r\n              \r\n              <div className=\"col-12 col-md-9 bg-body-light\">\r\n                <SearchContent />\r\n              </div>\r\n\r\n              {/* ---------------  Videos  --------------- */}\r\n              \r\n              <div className=\"videosHome\">\r\n                <div className=\"container-fluid container-lg\">\r\n                  <div className=\"sec-3 mb-5\">\r\n                    <div className=\"f-row d-flex mb-5 justify-content-between\">\r\n                      <h1>videos</h1>\r\n                      <select>\r\n                        <option>Sort by: All</option>\r\n                        <option>Beef</option>\r\n                        <option>Breakfast</option>\r\n                        <option>Chicken</option>\r\n                        <option>Lamb</option>\r\n                        <option>Pork</option>\r\n                        <option>Pasta</option>\r\n                        <option>Dessert</option>\r\n                        <option>Side</option>\r\n                        <option>Starter</option>\r\n                        <option>Seafood</option>\r\n                        <option>Vegetarian</option>\r\n                        <option>Miscellaneous</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className='mealWithVideo'>\r\n                      <div className='row g-4'>\r\n                        {\r\n                          loading ? (\r\n                            Array.from({ length: 4 }).map((_, index) => (\r\n                              <div className=\"col-12 col-sm-6 col-md-4 col-lg-3\" key={index}>\r\n                                <a\r\n                                  className=\"singleMeal position-relative text-light\"\r\n                                  href={playVideo}\r\n                                  rel=\"noreferrer\"\r\n                                  target='_blank'\r\n                                >\r\n                                  <div className=\"imgSingleMeal\">\r\n                                    <img src='' alt=\"\" className='placeholder'/>\r\n                                  </div>\r\n                                  <div className=\"detailsSigleMeal\">\r\n                                    <div className=\"playVideo\">\r\n                                      <FontAwesomeIcon icon={faPlay} />\r\n                                    </div>\r\n                                    <div className=\"textMeal\">\r\n                                      <h6 className='placeholder h-100 w-100'></h6>\r\n                                      <p className='placeholder h-100 w-100'></p>\r\n                                    </div>\r\n                                  </div>\r\n                                </a>\r\n                              </div>\r\n\r\n                            ))\r\n                          ) : (\r\n                            mealVideos.map((oneMeal) => {\r\n                              // console.log(\"data Meal from home: \"+ oneMeal)\r\n                              return (\r\n                                <div\r\n                                  className=\"col-12 col-sm-6 col-md-4 col-lg-3\"\r\n                                  key={oneMeal.idMeal}\r\n                                >\r\n                                  <a\r\n                                    className=\"singleMeal position-relative\"\r\n                                    href={playVideo}\r\n                                    rel=\"noreferrer\"\r\n                                    target='_blank'\r\n                                    onClick={() => setPlayVideo(oneMeal.strYoutube)}\r\n                                  >\r\n                                    <div className=\"imgSingleMeal\">\r\n                                      <img src={oneMeal.strMealThumb} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"detailsSigleMeal\">\r\n                                      <div className=\"playVideo\">\r\n                                        <FontAwesomeIcon icon={faPlay} />\r\n                                      </div>\r\n                                      <div className=\"textMeal\">\r\n                                        <h6>{oneMeal.strMeal}</h6>\r\n                                        <p>{oneMeal.strArea}</p>\r\n                                      </div>\r\n                                    </div>\r\n                                  </a>\r\n                                </div>\r\n                              );\r\n                            })\r\n                          )\r\n                        }\r\n                        \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* ---------------  Subscripe  --------------- */}\r\n              \r\n              <div className=\"Subscripe sec-4\">\r\n                <div className=\"container-fluid container-lg\">\r\n                  <div className=\"card\">\r\n                    <h2 className=\"header mb-5\">\r\n                      Be the first to know about the latest deals, receive\r\n                      new trending recipes &amp; more!\r\n                    </h2>\r\n\r\n                    <form className='d-flex align-items-center gap-3'>\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"rounded-pill\"\r\n                        required\r\n                        placeholder=\"Email Address\"\r\n                        pattern=\"[a-z0-9]+@[a-z]+\\.[a-z]{2,3}\"\r\n                        id=\"useremail\"\r\n                      />\r\n\r\n                      <button type=\"submit\" className=\"btn general-btn rounded-pill bg-warning\">\r\n                        subscribe\r\n                      </button>\r\n                    </form>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home\r\n"],"names":["_ref","data","isFavorite","toggleFavorite","navigate","useNavigate","randomInt","Math","floor","random","randomInt1","randomFloat","roundedFloat","round","navigation","storedUser","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","favoriteStatus","setFavoriteStatus","_jsx","_Fragment","children","className","_jsxs","onClick","setItem","stringify","replace","state","src","strMealThumb","alt","FontAwesomeIcon","icon","faHeart","idMeal","strMeal","faStar","strArea","valueSearch","setValueSearch","_useState3","_useState4","meal","setMeal","_useState5","_useState6","valueSelect","setValueSelect","_useState7","_useState8","loading","setLoading","_useState9","_useState10","favorites","setFavorites","mealId","updatedFavorites","includes","filter","id","concat","_toConsumableArray","useEffect","storedFavorites","_useState11","_useState12","itemOffset","setItemOffset","endOffset","currentItems","slice","pageCount","length","ceil","faSearch","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","response","json","meals","catch","error","console","map","res","strCategory","MealItem","log","ReactPaginate","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","title","links","showLinks","setShowLinks","faMinus","faPlus","link","index","href","questions","dataLinks","mealVideos","setMealVideos","playVideo","setPlayVideo","Navbar","faArrowRight","dataQ","Accordion","_objectSpread","SearchContent","Array","from","_","rel","faPlay","oneMeal","strYoutube","required","pattern","Footer"],"sourceRoot":""}