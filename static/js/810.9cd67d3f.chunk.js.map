{"version":3,"file":"static/js/810.9cd67d3f.chunk.js","mappings":"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","sources":["components/MealItem/MealItem.js","components/SearchContent/SearchContent.js","pages/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './MealItem.css'\r\nimport { useNavigate } from 'react-router-dom'\r\n// Imported Icons ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart , faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst MealItem = ({ data , isFavorite , toggleFavorite } ) => {\r\n    const navigate = useNavigate();\r\n    // console.log(data);\r\n    // console.log(\"toggleFavorite for \", data.idMeal,\": \" , toggleFavorite);\r\n\r\n    // a random number \r\n    const randomInt = Math.floor(Math.random() * 1000) + 1;\r\n    const randomInt1 = Math.floor(Math.random() * 5) + 1;\r\n    var randomFloat = Math.random();\r\n    var roundedFloat = (Math.round(randomFloat * 10) / 10) + randomInt1;\r\n\r\n\r\n    const navigation = useNavigate();\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n\r\n    const [favoriteStatus, setFavoriteStatus] = useState(isFavorite); \r\n\r\n    const handleLove = () => {\r\n        // Color red\r\n        setFavoriteStatus(!favoriteStatus);\r\n        if(storedUser){\r\n            toggleFavorite(data.idMeal);\r\n        }\r\n        else{\r\n            navigate('/signin')\r\n        }\r\n    }\r\n\r\n\r\n    const handleClickFood = () => {\r\n        localStorage.setItem('dataMealRecipe', JSON.stringify(data));\r\n        navigation(\"/recipe\", {\r\n            replace: true,\r\n            state: { data }\r\n        });\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className='col-6 col-md-4 col-lg-3'>\r\n                <div className=\"contentFood\" key={data.idMeal}>\r\n                    <div className='bgFood' onClick={handleClickFood}>\r\n                    </div>\r\n\r\n                    <div className=\"img-food mb-3\">\r\n                        <img src={data.strMealThumb} alt=\"\"/>\r\n                        <div className='iconHeart'>\r\n                            <FontAwesomeIcon \r\n                                icon={faHeart} \r\n                                className={favoriteStatus ? 'active' : ''}\r\n                                onClick={handleLove}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"details mt-4\">\r\n                        <h6>{data.strMeal}</h6>\r\n                        <div className=\"d-flex justify-content-between mt-2\">\r\n                            <p>\r\n                                <FontAwesomeIcon\r\n                                    icon={faStar}\r\n                                    className=\"text-warning pe-2\"\r\n                                />\r\n                                <span>{roundedFloat}({randomInt})</span>\r\n                            </p>\r\n                            <p className=''>{ data.strArea}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MealItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport './SearchContent.css'\r\nimport MealItem from '../MealItem/MealItem';\r\n\r\n// Imported Icons ======>\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Imported Paginate ======>\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nconst SearchContent = () => {\r\n    \r\n    const [valueSearch, setValueSearch] = useState('');\r\n    const [meal, setMeal] = useState([]);\r\n    const [valueSelect, setValueSelect] = useState('Sort by: All');\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n\r\n\r\n\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const toggleFavorite = (mealId) => {\r\n        let updatedFavorites;\r\n        if (favorites.includes(mealId)) {\r\n            updatedFavorites = favorites.filter((id) => id !== mealId);\r\n        } else {\r\n            updatedFavorites =[...favorites, mealId];\r\n        }\r\n        setFavorites(updatedFavorites);\r\n        localStorage.setItem('FavoriteMeal', JSON.stringify(updatedFavorites));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedFavorites = JSON.parse(localStorage.getItem('FavoriteMeal'));\r\n        if (storedFavorites) {\r\n            setFavorites(storedFavorites);\r\n        }\r\n    }, []);\r\n    \r\n    \r\n    \r\n    const SearchMeal = (e) => {\r\n        if(e.key === \"Enter\")\r\n        {\r\n            setLoading(true);\r\n            fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${valueSearch}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMeal(data.meals);\r\n                setLoading(false);\r\n                localStorage.setItem('dataMealSearch', JSON.stringify(data.meals));\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error fetching data:', error);\r\n            })\r\n        }\r\n    }\r\n\r\n    // Do Paginate =====================================================>\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n    const itemsPerPage = 8;\r\n\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    const currentItems = meal?.slice(itemOffset, endOffset) || [];\r\n    const pageCount = meal?.length ? Math.ceil(meal.length / itemsPerPage) : 0;\r\n    // console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n\r\n    // console.log('meal: ',meal)\r\n\r\n    const handlePageClick = (event) => {\r\n        const newOffset = (event.selected * itemsPerPage) % meal.length;\r\n        // console.log(\r\n        // `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n        // );\r\n        setItemOffset(newOffset);\r\n    };\r\n    // =================================================================\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid container-lg d-grid\">\r\n                <div className=\"row justify-content-between g-4\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                    <div className=\"divSearch\">\r\n                        <FontAwesomeIcon icon={faSearch} />\r\n                        <input\r\n                        type=\"search\"\r\n                        placeholder=\"Search for recipes...\"\r\n                        onChange={(e) => setValueSearch(e.target.value)}\r\n                        onKeyPress={SearchMeal}\r\n                        value={valueSearch}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 text-end\">\r\n                    <select onChange={(e) => setValueSelect(e.target.value)}>\r\n                        <option>Sort by: All</option>\r\n                        <option>Beef</option>\r\n                        <option>Breakfast</option>\r\n                        <option>Chicken</option>\r\n                        <option>Lamb</option>\r\n                        <option>Pork</option>\r\n                        <option>Pasta</option>\r\n                        <option>Dessert</option>\r\n                        <option>Side</option>\r\n                        <option>Starter</option>\r\n                        <option>Seafood</option>\r\n                        <option>Vegetarian</option>\r\n                        <option>Miscellaneous</option>\r\n                    </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"divFood my-5\">\r\n                    <div className=\"row g-5\">\r\n                        {valueSearch.length === 0  || meal == null? (\r\n                            <p className=\"notFound\">Not found</p>\r\n                            ) : ( \r\n                                loading ? (\r\n                                    <div className='col-6 col-md-4 col-lg-3'>\r\n                                        <div className=\"contentFood\">\r\n                                            <div className='bgFood'></div>\r\n                                            <div className=\"img-food mb-3\">\r\n                                                <img src='' alt=\"\" className='placeholder placeholder-img w-100'/>\r\n                                            </div>\r\n                                            <div className=\"details\">\r\n                                                <h6 className='placeholder h-100 w-100'></h6>\r\n                                                <div className=\"placeholder h-100 w-100\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                currentItems.map((res) => {\r\n                                    if (\r\n                                        valueSelect === res.strCategory ||\r\n                                        valueSelect === \"Sort by: All\"\r\n                                        ) {\r\n                                            return (\r\n                                                <MealItem \r\n                                                    data={res} \r\n                                                    isFavorite={favorites.includes(res.idMeal)}\r\n                                                    toggleFavorite={toggleFavorite} \r\n                                                    key={res.idMeal}\r\n                                                />\r\n                                            )\r\n                                    }\r\n                                console.log(meal);\r\n                            })\r\n                        )\r\n                    )}\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='pagination'>\r\n                    <ReactPaginate\r\n                        breakLabel=\"...\"\r\n                        nextLabel=\" >\"\r\n                        onPageChange={handlePageClick}\r\n                        pageRangeDisplayed={2}\r\n                        pageCount={pageCount}\r\n                        previousLabel=\"< \"\r\n                        renderOnZeroPageCount={null}\r\n                        pageLinkClassName='pageNum'\r\n                        previousLinkClassName='pageNum'\r\n                        nextLinkClassName='pageNum'\r\n                        activeLinkClassName='activePageNum'\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchContent","import React from 'react'\r\nimport './Search.css'\r\n\r\n// Imported pages ======>\r\nimport Navbar from '../../layout/Navbar/Navbar'\r\nimport Footer from '../../layout/Footer/Footer'\r\nimport SearchContent from '../../components/SearchContent/SearchContent';\r\n\r\n\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div className=\"SearchPage\">\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className=\"SearchContent\">\r\n        <SearchContent/>\r\n      </div>\r\n\r\n      <div className='Footer'>\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search\r\n"],"names":["_ref","data","isFavorite","toggleFavorite","navigate","useNavigate","randomInt","Math","floor","random","randomInt1","randomFloat","roundedFloat","round","navigation","storedUser","JSON","parse","localStorage","getItem","_useState","useState","_useState2","_slicedToArray","favoriteStatus","setFavoriteStatus","_jsx","_Fragment","children","className","_jsxs","onClick","setItem","stringify","replace","state","src","strMealThumb","alt","FontAwesomeIcon","icon","faHeart","idMeal","strMeal","faStar","strArea","valueSearch","setValueSearch","_useState3","_useState4","meal","setMeal","_useState5","_useState6","valueSelect","setValueSelect","_useState7","_useState8","loading","setLoading","_useState9","_useState10","favorites","setFavorites","mealId","updatedFavorites","includes","filter","id","concat","_toConsumableArray","useEffect","storedFavorites","_useState11","_useState12","itemOffset","setItemOffset","endOffset","currentItems","slice","pageCount","length","ceil","faSearch","type","placeholder","onChange","e","target","value","onKeyPress","key","fetch","then","response","json","meals","catch","error","console","map","res","strCategory","MealItem","log","ReactPaginate","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","pageLinkClassName","previousLinkClassName","nextLinkClassName","activeLinkClassName","Navbar","SearchContent","Footer"],"sourceRoot":""}